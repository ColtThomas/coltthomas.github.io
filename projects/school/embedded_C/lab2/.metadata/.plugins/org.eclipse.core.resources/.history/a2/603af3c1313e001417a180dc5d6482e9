#include "stdio.h"
#include "xil_io.h"
#include "buttons.h"
#include "supportFiles/leds.h"
#include "supportFiles/display.h"

// Initializes the button driver software and hardware. Returns one of the defined status values (above).
int buttons_init() {
	Xil_Out32(XPAR_GPIO_PUSH_BUTTONS_BASEADDR + 0x4, 0xF);
		return BUTTONS_INIT_STATUS_OK;
}

// Returns the current value of all 4 buttons as the lower 4 bits of the returned value.
// bit3 = BTN3, bit2 = BTN2, bit1 = BTN1, bit0 = BTN0.
int32_t buttons_read() {
	uint32_t *ptr = (uint32_t *) XPAR_GPIO_PUSH_BUTTONS_BASEADDR;
	return *ptr;
}

// Runs a test of the buttons. As you push the buttons, graphics and messages will be written to the LCD
// panel. The test will until all 4 pushbuttons are simultaneously pressed.
void buttons_runTest() {
	buttons_init();
	leds_init(true);
	uint32_t button_value = buttons_read() & 0xF;
	while(button_value  < 15){
		//leds_write(button_value);
		//button_value  = buttons_read() & 0xF;
		display_fillScreen(DISPLAY_BLACK);
		while (button_value & 0x1) {
			display_setCursor(120 , 20);
			display_println("1");
			button_value  = buttons_read() & 0xF;

		}
		while (button_value & 0x2) {
			display_setCursor(120 , 40);
			display_println("2");
			button_value  = buttons_read() & 0xF;

		}
		while (button_value & 0x4) {
			display_setCursor(120 , 80);
			display_println("3");
			button_value  = buttons_read() & 0xF;

		}
		while (button_value & 0x8) {
			display_setCursor(120 , 100);
			display_println("4");
			button_value  = buttons_read() & 0xF;

		}

	}

	leds_write(0x0000);
}
